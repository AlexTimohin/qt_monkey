cmake_minimum_required(VERSION 3.5)

find_package(Doxygen REQUIRED)
find_package(HTMLHelp)

OPTION(QT_MONKEY_DOC_WITH_STATIC "Create documentation for static members" ON)
OPTION(QT_MONKEY_DOC_WITH_PRIVATE "Create documentation for private members" OFF)
OPTION(QT_MONKEY_DOC_WITH_LOCAL "Create documentation for local members" OFF)
OPTION(QT_MONKEY_DOC_WITH_INTERNAL "Create documentation for internal features" OFF)
OPTION(QT_MONKEY_DOC_WITH_TESTS "Include documentation for tests" ON)

MARK_AS_ADVANCED(
  QT_MONKEY_DOC_WITH_PRIVATE
  QT_MONKEY_DOC_WITH_STATIC
  QT_MONKEY_DOC_WITH_LOCAL
  QT_MONKEY_DOC_WITH_INTERNAL
  QT_MONKEY_DOC_WITH_TESTS
  )

IF (HTML_HELP_COMPILER)
  SET(DOXYGEN_HTMLHELP YES)
ELSE (HTML_HELP_COMPILER)
  SET(DOXYGEN_HTMLHELP NO)
ENDIF (HTML_HELP_COMPILER)

IF (LATEX_COMPILER OR PDFLATEX_COMPILER)
  SET(DOXYGEN_LATEX YES)
ELSE (LATEX_COMPILER OR PDFLATEX_COMPILER)
  SET(DOXYGEN_LATEX NO)
ENDIF (LATEX_COMPILER OR PDFLATEX_COMPILER)

IF (PDFLATEX_COMPILER AND QT_MONKEY_DOC_CREATE_PDF)
  SET(DOXYGEN_PDFLATEX YES)
ELSE (PDFLATEX_COMPILER AND QT_MONKEY_DOC_CREATE_PDF)
  SET(DOXYGEN_PDFLATEX NO)
ENDIF (PDFLATEX_COMPILER AND QT_MONKEY_DOC_CREATE_PDF)

IF (QT_MONKEY_DOC_CREATE_PDF)
  SET(DOXYGEN_PDF_HYPERLINKS YES)
ELSE (QT_MONKEY_DOC_CREATE_PDF)
  SET(DOXYGEN_PDF_HYPERLINKS NO)
ENDIF (QT_MONKEY_DOC_CREATE_PDF)


IF (QT_MONKEY_DOC_WITH_PRIVATE)
  SET(DOXYGEN_EXTRACT_PRIVATE YES)
ELSE (QT_MONKEY_DOC_WITH_PRIVATE)
  SET(DOXYGEN_EXTRACT_PRIVATE NO)
ENDIF (QT_MONKEY_DOC_WITH_PRIVATE)

IF (QT_MONKEY_DOC_WITH_STATIC)
  SET(DOXYGEN_EXTRACT_STATIC YES)
ELSE (QT_MONKEY_DOC_WITH_STATIC)
  SET(DOXYGEN_EXTRACT_STATIC NO)
ENDIF (QT_MONKEY_DOC_WITH_STATIC)

IF (QT_MONKEY_DOC_WITH_LOCAL)
  SET(DOXYGEN_EXTRACT_LOCAL YES)
ELSE (QT_MONKEY_DOC_WITH_LOCAL)
  SET(DOXYGEN_EXTRACT_LOCAL NO)
ENDIF (QT_MONKEY_DOC_WITH_LOCAL)

IF (QT_MONKEY_DOC_WITH_INTERNAL)
  SET(DOXYGEN_EXTRACT_INTERNAL YES)
ELSE (QT_MONKEY_DOC_WITH_INTERNAL)
  SET(DOXYGEN_EXTRACT_INTERNAL NO)
ENDIF (QT_MONKEY_DOC_WITH_INTERNAL)

IF (DOT)
  SET(HAVE_DOT YES)
ELSE (DOT)
  SET(HAVE_DOT NO)
ENDIF (DOT)

SET(DOXYGEN_LANGUAGE "Russian" CACHE STRING "Language used by doxygen")
MARK_AS_ADVANCED(DOXYGEN_LANGUAGE)

# since doxygen 1.5.2 #
#IF (WIN32)
#	SET(USE_WINDOWS_ENCODING "YES")
#ELSE (WIN32)
#	SET(USE_WINDOWS_ENCODING "NO")
#	SET(INPUT_FILTER "iconv -f cp1251 -t koi8-r")
#ENDIF (WIN32)
#MARK_AS_ADVANCED(USE_WINDOWS_ENCODING)
#MARK_AS_ADVANCED(INPUT_FILTER)

IF(WIN2)
  SET(WIN32 "NO")
  SET(LINUX "YES")
ELSE(WIN2)
  SET(WIN32 "YES")
  SET(LINUX "NO")
ENDIF(WIN2)


#SET (TOP_SRCDIR ${CMAKE_CURRENT_SOURCE_DIR}/..)
GET_FILENAME_COMPONENT(TOP_SRCDIR ${CMAKE_CURRENT_SOURCE_DIR}/.. ABSOLUTE)
MARK_AS_ADVANCED (TOP_SRCDIR)

set(DOXYGEN_SOURCE_DIR
  ${TOP_SRCDIR}/agent.hpp
  )

SET(DOXYGEN_OUTPUT_DIR ${CMAKE_CURRENT_BINARY_DIR}/html)
STRING(REGEX REPLACE ";" " " DOXYGEN_INPUT_LIST "${DOXYGEN_SOURCE_DIR}")

SET(DOXYGEN_FILE_PATTERNS ".c *.c *.cxx *.cpp *.c++ *.h *.h *.hxx *.hpp *.h++ *.qs")

CONFIGURE_FILE(doxygen.conf.in ${CMAKE_CURRENT_BINARY_DIR}/doxygen.conf)
SET(HTML_TARGET ${DOXYGEN_OUTPUT_DIR}/index.html)
ADD_CUSTOM_TARGET(DoxygenDoc ALL
  ${DOXYGEN} ${CMAKE_CURRENT_BINARY_DIR}/doxygen.conf)
